{"remainingRequest":"/home/bahl/VUE/app1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bahl/VUE/app1/src/components/FormValidation.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/bahl/VUE/app1/src/components/FormValidation.vue","mtime":1637737697055},{"path":"/home/bahl/VUE/app1/node_modules/css-loader/dist/cjs.js","mtime":1636461702657},{"path":"/home/bahl/VUE/app1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636461702921},{"path":"/home/bahl/VUE/app1/node_modules/postcss-loader/src/index.js","mtime":1636461702745},{"path":"/home/bahl/VUE/app1/node_modules/cache-loader/dist/cjs.js","mtime":1636461702469},{"path":"/home/bahl/VUE/app1/node_modules/vue-loader/lib/index.js","mtime":1636461702829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm5hbWV7CiAgICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["FormValidation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA","file":"FormValidation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n    <b-form @submit=\"submitData\" @reset=\"onReset\">\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"Email address:\"\n        label-for=\"input-1\"\n        description=\"We'll never share your email with anyone else.\"\n      >\n        <b-form-input\n          id=\"input-1\"\n          v-model=\"users.email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-form-group id=\"input-group-2\" label=\"Your Name:\" label-for=\"input-2\">\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"users.name\"\n          placeholder=\"Enter name\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <br>\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n    </b-form>\n\n        <br>\n        <button v-on:click=\"display()\">Get Data</button><br><br>\n         <b-table striped hover :items=\"data\" v-if=\"data\"></b-table>\n        Enter the ID to seach: <input type=\"text\" placeholder=\"Enter id\" v-model=\"id\"/>\n        <button v-on:click=\"search()\">Search</button>\n\n       <br><br>\n    </div>\n</template>\n<script>\n// import axios from 'axios'\nexport default {\n\n    name:\"FormValidation\",\n    data(){\n       return{\n            users:{\n                name:\"\",\n                email:\"\"\n            },\n            error:{\n                name:\"\",\n                email:\"\"\n            },\n            data:null,\n            id: undefined,\n            response:null\n       }\n    },\n    methods:{\n        submitData(e){\n            if(this.users.name && this.users.email){\n                console.warn(\"DATA:\", this.users)\n            }\n            if(!this.users.name){\n               this.error.name=\"*Name is Required\"\n            }\n            else{\n                this.error.name=\"\";\n            }\n            if(!this.users.email){\n                this.error.email=\"*Email is Required\"\n            }\n            else{\n                this.error.email=\"\";\n            }\n            console.warn(this.error);\n            alert(JSON.stringify(this.users));\n            this.axios.post('http://localhost:8888/person', this.users )\n            .then(response => (this.response=response))\n            \n            if(this.response=='ERR_CONNECTION_REFUSED'){\n              console.warn('Connection Error')\n            }\n\n            e.preventDefault();\n            \n        },\n        onReset(event) {\n        event.preventDefault()\n        // Reset our form values\n        this.users.email = ''\n        this.users.name = ''\n      },\n        display(){\n            this.axios.get('http://localhost:8888/person')\n            .then(data=>(this.data=data.data))\n        },\n        search(){\n            console.warn(this.id)\n            this.axios({\n                method:'post',\n                url:'http://localhost:8888/person/search',\n                data:this.id,\n            headers:{'Content-Type': 'application/json', 'charset': 'utf-8'},\n            })\n            .then(data=>(console.warn(data)))\n        }\n    },\n    \n    mounted () {\n    \n  }\n}\n</script>\n<style>\n.name{\n    color: red;\n}\n</style>"]}]}