{"remainingRequest":"/home/bahl/VUE/app1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bahl/VUE/app1/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bahl/VUE/app1/src/App.vue","mtime":1639457354384},{"path":"/home/bahl/VUE/app1/node_modules/cache-loader/dist/cjs.js","mtime":1636461702469},{"path":"/home/bahl/VUE/app1/node_modules/thread-loader/dist/cjs.js","mtime":1636461702469},{"path":"/home/bahl/VUE/app1/node_modules/babel-loader/lib/index.js","mtime":1636461702749},{"path":"/home/bahl/VUE/app1/node_modules/cache-loader/dist/cjs.js","mtime":1636461702469},{"path":"/home/bahl/VUE/app1/node_modules/vue-loader/lib/index.js","mtime":1636461702829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAiLi9jb21wb25lbnRzL0xpbmVDaGFydCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgY29tcG9uZW50czogewogICAgTGluZUNoYXJ0CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGVkOiBmYWxzZSwKICAgICAgcGFnZVZpZXdzOiBudWxsLAogICAgICBwYWdlVmlld3NCeUNhdGVnb3J5OiBudWxsLAogICAgICB2aXNpdG9yczogbnVsbCwKICAgICAgc3R5bGVzOiB7CiAgICAgICAgd2lkdGg6ICI2NTBweCIsCiAgICAgICAgaGVpZ2h0OiAiNDAwcHgiLAogICAgICAgIHBvc2l0aW9uOiAicmVsYXRpdmUiCiAgICAgIH0KICAgIH07CiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgbGV0IHJlc3AgPSBhd2FpdCBmZXRjaCgKICAgICAgImh0dHBzOi8vYXBpLmpzb25iaW4uaW8vYi81ZTJiNGY2NzNkNzU4OTQxOTVkZTQ4ZmYvMSIKICAgICk7CiAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3AuanNvbigpOwogICAgY29uc29sZS5sb2coIkRBVEEiLCBkYXRhKTsKICAgIHRoaXMucGFnZVZpZXdzID0gZGF0YS5wYWdlVmlld3M7CiAgICB0aGlzLnBhZ2VWaWV3c0J5Q2F0ZWdvcnkgPSBkYXRhLnBhZ2VWaWV3c0J5Q2F0ZWdvcnk7CiAgICB0aGlzLnZpc2l0b3JzID0gZGF0YS5uZXdWc1JldHVybmluZzsKICAgIHRoaXMubG9hZGVkID0gdHJ1ZTsKICB9Cn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <h2>Page Views</h2>\n    <LineChart v-if=\"loaded\" :data=\"pageViews\" :styles=\"styles\"/>\n  </div>\n</template>\n\n<script>\nimport LineChart from \"./components/LineChart\";\n\nexport default {\n  name: \"App\",\n  components: {\n    LineChart\n  },\n  data() {\n    return {\n      loaded: false,\n      pageViews: null,\n      pageViewsByCategory: null,\n      visitors: null,\n      styles: {\n        width: \"650px\",\n        height: \"400px\",\n        position: \"relative\"\n      }\n    };\n  },\n  async created() {\n    let resp = await fetch(\n      \"https://api.jsonbin.io/b/5e2b4f673d75894195de48ff/1\"\n    );\n    let data = await resp.json();\n    console.log(\"DATA\", data);\n    this.pageViews = data.pageViews;\n    this.pageViewsByCategory = data.pageViewsByCategory;\n    this.visitors = data.newVsReturning;\n    this.loaded = true;\n  }\n};\n</script>\n"]}]}